/**
 * Implements the interface for a browser theme.
 *
 * @remarks
 * The structure of this interface is based on the Firefox Theming API:
 * https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/theme
 */
export interface IBrowserTheme {
  icons: string;
  icons_attention: string;
  frame: string;
  tab_text: string;
  tab_loading: string;
  tab_background_text: string;
  tab_selected: string;
  tab_line: string;
  tab_background_separator: string;
  toolbar: string;
  toolbar_field: string;
  toolbar_field_focus: string;
  toolbar_field_text: string;
  toolbar_field_text_focus: string;
  toolbar_field_border: string;
  toolbar_field_border_focus: string;
  toolbar_field_separator: string;
  toolbar_field_highlight: string;
  toolbar_field_highlight_text: string;
  toolbar_bottom_separator: string;
  toolbar_top_separator: string;
  toolbar_vertical_separator: string;
  ntp_background: string;
  ntp_text: string;
  popup: string;
  popup_border: string;
  popup_text: string;
  popup_highlight: string;
  popup_highlight_text: string;
  sidebar: string;
  sidebar_border: string;
  sidebar_text: string;
  sidebar_highlight: string;
  sidebar_highlight_text: string;
  bookmark_text: string;
  button_background_hover: string;
  button_background_active: string;
}

/**
 * Implements an interface for the pywal colors fetched from the users computer by the native messaging host.
 *
 * @remarks
 * The colors that the native app sends out is just a list of colors, where
 * indexes 0-15 corresponds to the colors generated by pywal and 16-17 the
 * additional colors generated by the native app. All the colors are in the hex format.
 */
export interface IPywalColors  {
  [index: number]: string;
}

/**
 * Implements an interface for the parsed colorscheme used when generating the
 * extension- and browser theme.
 */
export interface IColorscheme {
  background: string;
  foreground: string;
  backgroundLight: string;
  accentPrimary: string;
  accentSecondary: string;
  text: string;
}

/**
 * Implements functions for parsing pywal colors received from the native app and
 * generating a colorscheme and an extension- and browser theme.
 *
 * @param pywalColors - the pywal colors received from the native messaging host
 */
export class Colorscheme {
  private pywalColors: IPywalColors;
  private browserTheme: IBrowserTheme;

  constructor(pywalColors: IPywalColors) {
    this.pywalColors = pywalColors;

    this.generateColorscheme();
    this.generateBrowserTheme();
  }

  private generateColorscheme() {

  }

  private generateBrowserTheme() {

  }
}


